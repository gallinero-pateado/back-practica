// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/Check-NuevoPostulanteForChanges": {
            "get": {
                "description": "Verifica cambios en la tabla de postulaciones y envía correos electrónicos si hay cambios",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "postulaciones"
                ],
                "summary": "Verificar cambios en la tabla de postulaciones",
                "responses": {
                    "200": {
                        "description": "Verificación completada",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error al verificar cambios",
                        "schema": {
                            "$ref": "#/definitions/database.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/Deletepracticas/{id}": {
            "delete": {
                "description": "Elimina una práctica específica de la base de datos utilizando su ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "practicas"
                ],
                "summary": "Elimina una práctica por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la práctica",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "La práctica fue eliminada exitosamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "ID inválido",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Práctica no encontrada",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error al eliminar la práctica",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/GetAllusuarios": {
            "get": {
                "description": "Recupera todos los registros de usuarios almacenados en la base de datos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "usuarios"
                ],
                "summary": "Obtiene una lista de todos los usuarios",
                "responses": {
                    "200": {
                        "description": "Lista de usuarios obtenida con éxito",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Usuario"
                            }
                        }
                    },
                    "500": {
                        "description": "Error al obtener los usuarios",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/GetPracticasEmpresas": {
            "get": {
                "description": "Recupera las prácticas asociadas a la empresa del usuario autenticado mediante su UID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "practicas"
                ],
                "summary": "Obtiene las prácticas de la empresa del usuario autenticado",
                "responses": {
                    "200": {
                        "description": "Lista de prácticas",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Practica"
                            }
                        }
                    },
                    "401": {
                        "description": "Usuario no autenticado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Prácticas no encontradas",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/Getpracticas": {
            "get": {
                "description": "Recupera la lista completa de todas las prácticas registradas en la base de datos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "practicas"
                ],
                "summary": "Obtiene todas las prácticas",
                "responses": {
                    "200": {
                        "description": "Lista de todas las prácticas",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Practica"
                            }
                        }
                    },
                    "500": {
                        "description": "Error al obtener las prácticas",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/Getusuario/{uid}": {
            "get": {
                "description": "Recupera la información de un usuario de la base de datos utilizando su UID de Firebase",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "usuarios"
                ],
                "summary": "Obtiene los datos de un usuario por su UID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UID del usuario",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Datos del usuario encontrados",
                        "schema": {
                            "$ref": "#/definitions/models.Usuario"
                        }
                    },
                    "404": {
                        "description": "Usuario no encontrado",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/MandarCorreoNuevoPostulante": {
            "post": {
                "description": "Sends an email to the user with the updated status of their application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "email"
                ],
                "summary": "Send an email notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Recipient email address",
                        "name": "to",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Application status",
                        "name": "estadoPostulacion",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email sent successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/Upgradepracticas/{id}": {
            "put": {
                "description": "Actualiza los detalles de una práctica existente con los datos proporcionados",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "practicas"
                ],
                "summary": "Actualiza una práctica por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID de la práctica a actualizar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Datos de la práctica actualizada",
                        "name": "practica",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Crudempresa.practicasRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "La práctica fue actualizada exitosamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Descripción del error de solicitud",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Práctica no encontrada",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error al actualizar la práctica en la base de datos",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/check-postulaciones": {
            "get": {
                "description": "Verifica cambios en la tabla de postulaciones y envía correos electrónicos si hay cambios",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "postulaciones"
                ],
                "summary": "Verificar cambios en la tabla de postulaciones",
                "responses": {
                    "200": {
                        "description": "Verificación completada",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error al verificar cambios",
                        "schema": {
                            "$ref": "#/definitions/database.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/complete-profile": {
            "post": {
                "description": "Permite a los usuarios autenticados completar o actualizar su perfil, incluida la foto de perfil",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Completar o actualizar perfil de usuario",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Datos para actualizar el perfil",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.ProfileUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Perfil actualizado correctamente",
                        "schema": {
                            "$ref": "#/definitions/auth.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Datos inválidos",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Usuario no autenticado",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error al actualizar el perfil",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Autentica al usuario utilizando Firebase y devuelve un token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Inicia sesión un usuario",
                "parameters": [
                    {
                        "description": "Datos de inicio de sesión",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inicio de sesión exitoso",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Datos inválidos",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Credenciales incorrectas",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/password-reset": {
            "post": {
                "description": "Permite a los usuarios recuperar su contraseña mediante un correo de recuperación",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "password"
                ],
                "summary": "Envía un correo de recuperación de contraseña",
                "parameters": [
                    {
                        "description": "Correo del usuario",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.PasswordResetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Correo de recuperación enviado con éxito",
                        "schema": {
                            "$ref": "#/definitions/auth.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Email requerido",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error al enviar el correo de recuperación",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/practicas/filtro": {
            "get": {
                "description": "Filtra las prácticas según los parámetros opcionales como modalidad, área de práctica, jornada, ubicación y fecha de publicación",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "practicas"
                ],
                "summary": "Filtra las prácticas",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filtrar por modalidad (presencial, remoto, etc.)",
                        "name": "modalidad",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filtrar por área de práctica (ingeniería, marketing, etc.)",
                        "name": "area_practica",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filtrar por jornada (completa, parcial, etc.)",
                        "name": "jornada",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filtrar por ubicación (ciudad, país, etc.)",
                        "name": "ubicacion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filtrar por mes de publicación (ejemplo: '2024-10')",
                        "name": "fecha_publicacion",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de prácticas filtradas",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error al obtener las prácticas",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/profile-status": {
            "get": {
                "description": "Retorna si el perfil ha sido completado o no",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Obtener estado del perfil",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Estado del perfil",
                        "schema": {
                            "$ref": "#/definitions/auth.ProfileStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Datos inválidos",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Usuario no autenticado",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Crea un nuevo usuario en Firebase y lo guarda en la base de datos local",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Registra un nuevo usuario",
                "parameters": [
                    {
                        "description": "Datos del usuario a registrar",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuario registrado correctamente",
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Solicitud inválida",
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterResponse"
                        }
                    }
                }
            }
        },
        "/register_admin": {
            "post": {
                "description": "Crea un nuevo usuario en Firebase y lo guarda en la base de datos local",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Registra un nuevo usuario",
                "parameters": [
                    {
                        "description": "Datos del usuario a registrar",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterRequest_admin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuario registrado correctamente",
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterResponse_admin"
                        }
                    },
                    "400": {
                        "description": "Solicitud inválida",
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterResponse_admin"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterResponse_admin"
                        }
                    }
                }
            }
        },
        "/register_empresa": {
            "post": {
                "description": "Crea un nuevo usuario en Firebase y lo guarda en la base de datos local",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Registra un nuevo usuario",
                "parameters": [
                    {
                        "description": "Datos del usuario a registrar",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterRequest_empresa"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuario registrado correctamente",
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterResponse_empresa"
                        }
                    },
                    "400": {
                        "description": "Solicitud inválida",
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterResponse_empresa"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterResponse_empresa"
                        }
                    }
                }
            }
        },
        "/resend-verification": {
            "post": {
                "description": "Reenvía el correo de verificación a un usuario registrado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "verification"
                ],
                "summary": "Reenviar correo de verificación",
                "parameters": [
                    {
                        "description": "Correo del usuario",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.EmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Correo de verificación enviado nuevamente",
                        "schema": {
                            "$ref": "#/definitions/auth.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Email requerido",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Usuario no encontrado",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sendemail": {
            "post": {
                "description": "Sends an email to the user with the updated status of their application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "email"
                ],
                "summary": "Send an email notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Recipient email address",
                        "name": "to",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Application status",
                        "name": "estadoPostulacion",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email sent successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/upload-image": {
            "post": {
                "description": "Sube una imagen a Firebase Storage y actualiza el campo de foto de perfil del usuario autenticado",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "upload"
                ],
                "summary": "Subir una imagen de perfil",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Imagen a subir",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL de la imagen subida y mensaje de éxito",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Usuario no autenticado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Error al subir la imagen",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Crudempresa.practicasRequest": {
            "type": "object",
            "properties": {
                "Area_practica": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Fecha_expiracion": {
                    "type": "string"
                },
                "Fecha_fin": {
                    "type": "string"
                },
                "Fecha_inicio": {
                    "type": "string"
                },
                "Jornada": {
                    "type": "string"
                },
                "Modalidad": {
                    "type": "string"
                },
                "Requisitos": {
                    "type": "string"
                },
                "Titulo": {
                    "type": "string"
                },
                "Ubicacion": {
                    "type": "string"
                }
            }
        },
        "auth.EmailRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "auth.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "auth.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "auth.PasswordResetRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "auth.ProfileStatusResponse": {
            "type": "object",
            "properties": {
                "perfil_completado": {
                    "type": "boolean"
                }
            }
        },
        "auth.ProfileUpdateRequest": {
            "type": "object",
            "properties": {
                "ano_ingreso": {
                    "type": "string"
                },
                "fecha_nacimiento": {
                    "type": "string"
                },
                "id_carrera": {
                    "type": "integer"
                }
            }
        },
        "auth.RegisterRequest": {
            "type": "object",
            "required": [
                "apellidos",
                "email",
                "nombres",
                "password"
            ],
            "properties": {
                "Id_carrera": {
                    "type": "integer"
                },
                "apellidos": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "nombres": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.RegisterRequest_admin": {
            "type": "object",
            "required": [
                "Email_admin",
                "Nombre_admin",
                "password"
            ],
            "properties": {
                "Email_admin": {
                    "type": "string"
                },
                "Nombre_admin": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.RegisterRequest_empresa": {
            "type": "object",
            "required": [
                "Email_empresa",
                "Nombre_empresa",
                "password"
            ],
            "properties": {
                "Email_empresa": {
                    "type": "string"
                },
                "Nombre_empresa": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.RegisterResponse": {
            "type": "object",
            "properties": {
                "firebase_uid": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "auth.RegisterResponse_admin": {
            "type": "object",
            "properties": {
                "firebase_uid": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "auth.RegisterResponse_empresa": {
            "type": "object",
            "properties": {
                "firebase_uid": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "auth.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "database.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.Practica": {
            "type": "object",
            "properties": {
                "Area_practica": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Fecha_expiracion": {
                    "type": "string"
                },
                "Fecha_fin": {
                    "type": "string"
                },
                "Fecha_inicio": {
                    "type": "string"
                },
                "Id_Empresa": {
                    "type": "integer"
                },
                "Id_estado_practica": {
                    "type": "integer"
                },
                "Jornada": {
                    "type": "string"
                },
                "Modalidad": {
                    "type": "string"
                },
                "Requisitos": {
                    "type": "string"
                },
                "Titulo": {
                    "type": "string"
                },
                "Ubicacion": {
                    "type": "string"
                },
                "fecha_publicacion": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.Usuario": {
            "type": "object",
            "properties": {
                "Ano_Ingreso": {
                    "type": "string"
                },
                "Apellidos": {
                    "type": "string"
                },
                "Correo": {
                    "type": "string"
                },
                "Fecha_Nacimiento": {
                    "type": "string"
                },
                "Foto_Perfil": {
                    "type": "string"
                },
                "Id_Estado_Usuario": {
                    "type": "boolean"
                },
                "Id_carrera": {
                    "type": "integer"
                },
                "Nombres": {
                    "type": "string"
                },
                "PerfilCompletado": {
                    "type": "boolean"
                },
                "Rol": {
                    "type": "string"
                },
                "fecha_creacion": {
                    "type": "string"
                },
                "firebase_usuario": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
